{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Logo.js","webpack:///./src/components/Layout.js"],"names":["bioQuery","Bio","react_default","a","createElement","gatsby_browser_entry","query","render","data","_data$site$siteMetada","site","siteMetadata","author","social","style","display","marginBottom","rhythm","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","twitter","_4007731267","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","title","_this$props$pageConte","pageContext","previous","next","Layout","location","seo","frontmatter","description","excerpt","Object","assign","scale","marginTop","date","dangerouslySetInnerHTML","__html","html","components_Bio","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","logoQuery","Logo","logo","_1370849514","_this$props","textDecoration","color","fontFamily","marginLeft","maxWidth","components_Logo"],"mappings":"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","file":"component---src-templates-blog-post-js-be862f2f4600bdf9dfa2.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong> who lives and works in San\n              Francisco building useful things.\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nfunction Logo() {\n  return (\n    <StaticQuery\n      query={logoQuery}\n      render={data => {\n        return (\n          <div>\n            <Image fixed={data.logo.childImageSharp.fixed} />\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst logoQuery = graphql`\n  query LogoQuery {\n    logo: file(absolutePath: { regex: \"/logo.png/\" }) {\n      childImageSharp {\n        fixed(width: 530, height: 305) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`\n\nexport default Logo\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\nimport Logo from '../components/Logo'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Logo />\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}